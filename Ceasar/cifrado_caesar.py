# -*- coding: utf-8 -*-
"""Cifrado Caesar.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1gY4V2n7_IqOXOrgpa5Xte8w3-fzXGohR

# **Cifrado Caesar HOMEWORK**
## Anderson Stick Barrera Tovar
### 1000623506

Implementar el algoritmo de cifrado del César en Python. Utilizar un parámetro para identificar el parámetro k (permutaciones).

El algoritmo debe recibir como entrada para cifrar:
- El mensaje en texto claro
- El parámetro k

Para descifrar:
- Mensaje cifrado
- El parámetro k

Cargar en esta tarea un archivo ZIP con lo siguiente:
- Archivo Python
- Pequeño video o screenshot (pantallazo) en donde se muestre funcionar el algoritmo

# Implementación del cifrado César en Python

A continuación, se presenta la implementación del algoritmo de cifrado César en Python. Este algoritmo permite cifrar y descifrar mensajes utilizando un parámetro para identificar el número de permutaciones, denotado como k.

## Cifrado César

El cifrado César es un tipo de cifrado por sustitución en el que cada letra en el texto es reemplazada por una letra que se encuentra un número fijo de posiciones más adelante en el alfabeto. Por ejemplo, con un desplazamiento de 3 posiciones, 'A' se convertiría en 'D', 'B' se convertiría en 'E', y así sucesivamente.

El algoritmo recibe como entrada:
- El mensaje en texto claro.
- El parámetro k, que denota el número de permutaciones.

### Función para cifrar un mensaje:
"""

def caesar_cipher(text, k):
    ciphered_text = ""
    for char in text:
        if char.isalpha():
            shift = k % 26  # Limiting the value of k to a valid range
            if char.islower():
                ciphered_text += chr((ord(char) - ord('a') + shift) % 26 + ord('a'))
            elif char.isupper():
                ciphered_text += chr((ord(char) - ord('A') + shift) % 26 + ord('A'))
        else:
            ciphered_text += char
    return ciphered_text

"""### Función para descifrar un mensaje:"""

def caesar_decipher(ciphered_text, k):
    return caesar_cipher(ciphered_text, -k)  # Decrypting is simply doing a cipher with the negative of k

"""## Ejemplo de uso:"""

# Example usage
plain_text = "Hello World"
k = 3  # Parameter k for the Caesar cipher

# Encrypt the text
ciphered_text = caesar_cipher(plain_text, k)
print("Ciphered text:", ciphered_text)

# Decrypt the text
deciphered_text = caesar_decipher(ciphered_text, k)
print("Deciphered text:", deciphered_text)

ciphertext = "WKLVL VHAWU HPHOB LQVHF XUHHQ FUBSW LRQGR QRWXV HLWWR SURWH FWYDO XDEOH LQIRU PDWLR Q"
# Descifrar el texto
deciphered_text = caesar_decipher(ciphertext, k)
print("Texto descifrado:", deciphered_text)

"""Message 2 Then the and
LWLVF ODLPH GWKHH DUOLH VWNQR ZQUHI HUHQF HWRWK LVWBS HRIFL SKHUL VLQWK HNDPD VXWUD ZKLFK VDBVZ RPHQV KRXOG OHDUQ WKHDU WRIVH FUHWZ ULWLQ JWRFR QFHDO WKHLU OLDVR QV
"""

ciphertext = "LWLVF ODLPH GWKHH DUOLH VWNQR ZQUHI HUHQF HWRWK LVWBS HRIFL SKHUL VLQWK HNDPD VXWUD ZKLFK VDBVZ RPHQV KRXOG OHDUQ WKHDU WRIVH FUHWZ ULWLQ JWRFR QFHDO WKHLU OLDVR QV"
# Descifrar el texto
deciphered_text = caesar_decipher(ciphertext, k)
print("Texto descifrado:", deciphered_text)